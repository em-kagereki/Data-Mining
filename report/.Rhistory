install.packages("stevemisc")
rticles::journals()
install.packages("stevetemplates")
build_pdf("Presentation.Rmd")
library(xaringanBuilder)
build_pdf("Presentation.Rmd")
setwd("E:/school/data mining/project/mimic-iii-clinical-database-1.4/mimic-iii-clinical-database-1.4")
build_pdf("Presentation.Rmd")
setwd("E:/school/data mining/project/mimic-iii-clinical-database-1.4/mimic-iii-clinical-database-1.4/codes")
build_pdf("Presentation.Rmd")
library(dplyr)
library(dplyr)
library(stringr)
library(tidyverse)
library(tidyr)
library(dlookr)
library(table1)
library(alphaOutlier)
library(boot)
library(htmlTable)
library(ggplot2)
library(scales)
library(factoextra)
library(lubridate)
library(gtsummary)
library(tm)
library(tidytext)
library(data.table)
labNew<-read.csv("newdata.csv") %>%
mutate_if(is.character, list(~na_if(.,""))) %>%
drop_na(LOINC_CODE) %>%
unite(combined, LOINC_CODE,FLAG, sep = "-", remove = FALSE) %>%
select(-FLAG,-LABEL,-FLUID,LOINC_CODE,-X)
setwd("E:/school/data mining/project/mimic-iii-clinical-database-1.4/mimic-iii-clinical-database-1.4")
labNew<-read.csv("newdata.csv") %>%
mutate_if(is.character, list(~na_if(.,""))) %>%
drop_na(LOINC_CODE) %>%
unite(combined, LOINC_CODE,FLAG, sep = "-", remove = FALSE) %>%
select(-FLAG,-LABEL,-FLUID,LOINC_CODE,-X)
View(labNew)
Loinc <- read.csv("Loinc.csv")
colnames(Loinc)
View(Loinc)
Loinc <- read.csv("Loinc.csv") %>%
select(LOINC_NUM,COMPONENT,CLASS)
colnames(labNew)
Loinc <- read.csv("Loinc.csv") %>%
mutate(LOINC_CODE = LOINC_NUM) %>%
select(LOINC_CODE,COMPONENT,CLASS)
lab10<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE)
nrow(lab10)
nrow(labNew)
View(lab10)
Loinc <- read.csv("Loinc.csv")
services<-read.csv("SERVICES.csv")
View(services)
procedures<-read.csv("PROCEDUREEVENTS_MV.csv")
View(procedures)
procedures<-read.csv("PROCEDUREEVENTS_MV.csv")
D_ITEM<-read.csv("D_ITEMS.csv")
procedures<-merge(x=procedures,y=D_ITEM, by = "ITEMID",x.all=TRUE) %>%
select(SUBJECT_ID,HADM_ID,STARTTIME,ENDTIME,LABEL)
View(procedures)
proceduresForProcess<-procedures
View(lab10)
View(services)
medication<-read.csv("PRESCRIPTIONS.csv")
head(medication)
med2<-medication %>% select(SUBJECT_ID,HADM_ID,STARTDATE,ENDDATE,DRUG)
rm(medication)
write.csv(med2,"med2.csv")
Nrow(med2)
nrow(med2)
View(meds2)
View(med2)
setwd("E:/school/data mining/project/mimic-iii-clinical-database-1.4/mimic-iii-clinical-database-1.4")
# The following tables are used to define and track patient stays:
admin<-read.csv("ADMISSIONS.csv")
pt<-read.csv("PATIENTS.csv")
pt <- pt %>% select(SUBJECT_ID, GENDER, DOB,EXPIRE_FLAG)
admin<-merge(x = admin, y = pt, by = "SUBJECT_ID", all.x = TRUE) %>%
mutate(ADMITTIME = ymd_hms(ADMITTIME)) %>%
mutate(DISCHTIME = ymd_hms(DISCHTIME)) %>%
mutate(DEATHTIME = ymd_hms(DEATHTIME)) %>%
mutate(DOB = ymd_hms(DOB)) %>%
mutate(AGE = round(as.numeric(difftime(ADMITTIME,DOB, units = "days")/365),0)) %>%
mutate(LOS2 = as.numeric(difftime(DISCHTIME,ADMITTIME, units = "hours"))) %>%
mutate(AGE = ifelse(AGE<300, AGE, AGE-211)) %>%
mutate(Period = ntile(as.numeric(ADMITTIME),12)) %>%
mutate(endGoldenHour = ADMITTIME + minutes(60)) #dhours
## The admission cycle
admin <- admin %>%
group_by(SUBJECT_ID) %>%
mutate(admissionCycle = 1:n())
## Total number of admissions
admin<-admin %>%
group_by(SUBJECT_ID) %>%
arrange(DISCHTIME) %>%
mutate(nAdmissions = n_distinct(HADM_ID))
admin1 <- admin %>%
mutate(deadBefore = as.numeric(DEATHTIME-endGoldenHour)) %>%
mutate(deadBefore = ifelse(HOSPITAL_EXPIRE_FLAG==0, 0, deadBefore)) %>%  ## Remove all the patients who died before the cut-off
filter(deadBefore>=0)
deadBefore<-admin %>%
mutate(deadBefore = as.numeric(DEATHTIME-endGoldenHour)) %>%
mutate(deadBefore = ifelse(HOSPITAL_EXPIRE_FLAG==1, 0, deadBefore)) %>%  ## Remove all the patients who died before the cut-off
filter(deadBefore==0)
admin1$DIAGNOSIS2<-tolower(admin1$DIAGNOSIS)
keyword<- c("stemi","acute coronary syndrome","angina","tachycardia","aortic aneurysm","pericardi","ortic dissection",
"coronary artery dissection","cardiomyopathy","heart failure","mitral valve disease","mitral stenosis",
"coronary artery disease","chf","congestive heart failure","heart failure","telemetry","myocardial infaction",
"cardiac arrest","myocardial infarction","aortic stenosis","st elevated","pericardial effusion", "cardiomyopathy",
"cath lab","tamponade","tamponede")
cardiacSyndromes <- admin1 %>%
filter( grepl(paste(keyword, collapse="|"),DIAGNOSIS2)) %>%
select(-DIAGNOSIS2,-ROW_ID) %>%
mutate(EXPIRE_FLAG = ifelse(EXPIRE_FLAG==1 & nAdmissions>admissionCycle, 0, EXPIRE_FLAG)) ## To pick out exactly the cycle the patient died!
target <- c(cardiacSyndromes$HADM_ID)
med2<-meds %>%
filter(HADM_ID %in% target)
med2<-med2 %>%
filter(HADM_ID %in% target)
nrow(med2)
medication<-read.csv("med2.csv")
nrow(medication)
target <- c(cardiacSyndromes$HADM_ID)
target
med2<-medication %>%
filter(HADM_ID %in% target)
nrow(med2)
nrow(medication)
write.csv(med2,"med2.csv")
medication<-read.csv("med2.csv")
View(medication)
rm(med2)
rm(labNew)
rm(lab10)
rm(procedures)
library(bupaR)
colnames(medication)
example_log_1 <-medication%>% #a data.frame with the information in the table above
eventlog(
case_id = "SUBJECT_ID",
activity_id = "DRUG",
#activity_instance_id = "activity_instance",
#lifecycle_id = "status",
timestamp = "STARTDATE",
#resource_id = "X"
)
example_log_1 <-medication%>% #a data.frame with the information in the table above
eventlog(
case_id = "SUBJECT_ID",
#activity_id = "DRUG",
activity_instance_id = "DRUG",
#lifecycle_id = "status",
timestamp = "STARTDATE",
#resource_id = "X"
)
example_log_1 <-medication%>% #a data.frame with the information in the table above
eventlog(
case_id = "SUBJECT_ID",
activity_id = "X",
activity_instance_id = "DRUG",
#lifecycle_id = "status",
timestamp = "STARTDATE",
#resource_id = "X"
)
example_log_1 <-medication%>% #a data.frame with the information in the table above
eventlog(
case_id = "SUBJECT_ID",
activity_id = "X",
activity_instance_id = "DRUG",
lifecycle_id = "X",
timestamp = "STARTDATE",
resource_id = "X"
)
example_log_1 <-medication%>% #a data.frame with the information in the table above
eventlog(
case_id = "SUBJECT_ID",
activity_id = "X",
activity_instance_id = "DRUG",
lifecycle_id = "X",
timestamp = ymd_hms(STARTDATE),
resource_id = "X"
)
medication<-read.csv("med2.csv") %>%
mutate(STARTDATE=ymd_hms(STARTDATE))
example_log_1 <-medication%>% #a data.frame with the information in the table above
eventlog(
case_id = "SUBJECT_ID",
activity_id = "X",
activity_instance_id = "DRUG",
lifecycle_id = "X",
timestamp = "STARTDATE",
resource_id = "X"
)
medication<-read.csv("med2.csv")
medication<-read.csv("med2.csv") %>%
mutate(STARTDATE=ymd_hms(STARTDATE))
View(medication)
View(lab10)
labNew<-read.csv("newdata.csv") %>%
mutate_if(is.character, list(~na_if(.,""))) %>%
drop_na(LOINC_CODE) %>%
unite(combined, LOINC_CODE,FLAG, sep = "-", remove = FALSE) %>%
select(-FLAG,-LABEL,-FLUID,LOINC_CODE,-X)
lab10<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE)
Loinc <- read.csv("Loinc.csv") %>%
mutate(LOINC_CODE = LOINC_NUM) %>%
select(LOINC_CODE,COMPONENT,CLASS)
lab10<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE)
View(lab10)
colnames(lab10)
View(lab10)
lab100<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE) %>%
unite(case_id, SUBJECT_ID,HADM_ID, sep = "-", remove = FALSE) %>%
unite(activity2, case_id,LOINC_CODE, sep = "-", remove = FALSE) %>%
mutate(status = "complete") %>%
group_by(activity2) %>%
mutate(admissionCycle = 1:n())
View(lab100)
lab100<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE) %>%
unite(case_id, SUBJECT_ID,HADM_ID, sep = "-", remove = FALSE) %>%
unite(activity2, case_id,LOINC_CODE, sep = "-", remove = FALSE) %>%
mutate(status = "complete") %>%
group_by(LOINC_CODE) %>%
mutate(admissionCycle = 1:n())
View(lab100)
lab100<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE) %>%
unite(case_id, SUBJECT_ID,HADM_ID, sep = "-", remove = FALSE) %>%
unite(activity2, case_id,LOINC_CODE, sep = "-", remove = FALSE) %>%
mutate(status = "complete") %>%
group_by(LOINC_CODE) %>%
mutate(admissionCycle = 1:n()) %>%
mutate(nAdmissions = n_distinct(HADM_ID))
View(lab100)
lab100<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE) %>%
unite(case_id, SUBJECT_ID,HADM_ID, sep = "-", remove = FALSE) %>%
mutate(status = "complete")
uni<-lab100 %>%
group_by(LOINC_CODE) %>%
arrange(LOINC_CODE) %>%
mutate(nAdmissions = n_distinct(LOINC_CODE))
View(uni)
uni<-lab100 %>%
select(LOINC_CODE)
View(uni)
uni<-lab100 %>%
select(LOINC_CODE)
group_by(LOINC_CODE) %>%
mutate(nAdmissions = 1:n())
uni<-lab100 %>%
select(LOINC_CODE) %>%
group_by(LOINC_CODE) %>%
mutate(nAdmissions = 1:n())
View(uni)
uni<-lab100 %>%
select(LOINC_CODE) %>%
distinct()
View(uni)
uni<-lab100 %>%
select(LOINC_CODE) %>%
distinct()
group_by(LOINC_CODE) %>%
mutate(activity_instance = 1:n())
uni<-lab100 %>%
select(LOINC_CODE) %>%
distinct() %>%
mutate(activity_instance = 1:n())
View(uni)
colnames(uni)
lab100<-merge(x= lab100, y=uni, by = "LOINC_CODE", x.all=T)
colnames(lab100)
example_log_3<-lab100 %>%
mutate(resource = NA) %>%
eventlog(
case_id = "case_id",
activity_id = "DRUG",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "CHARTTIME",
resource_id = "resource"
)
colnames(lab100)
example_log_3<-lab100 %>%
mutate(resource = NA) %>%
eventlog(
case_id = "case_id",
activity_id = "LOINC_CODE",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "CHARTTIME",
resource_id = "resource"
)
lab100<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE) %>%
unite(case_id, SUBJECT_ID,HADM_ID, sep = "-", remove = FALSE) %>%
mutate(status = "complete") %>%
mutate(CHARTTIME = ymd_hms(CHARTTIME))
uni<-lab100 %>%
select(LOINC_CODE) %>%
distinct() %>%
mutate(activity_instance = 1:n())
lab100<-merge(x= lab100, y=uni, by = "LOINC_CODE", x.all=T)
example_log_3<-lab100 %>%
mutate(resource = NA) %>%
eventlog(
case_id = "case_id",
activity_id = "LOINC_CODE",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "CHARTTIME",
resource_id = "resource"
)
lab100<-merge(x=labNew, y = Loinc, by = "LOINC_CODE", x.ll=TRUE) %>%
unite(case_id, SUBJECT_ID,HADM_ID, sep = "-", remove = FALSE) %>%
mutate(status = "complete") %>%
mutate(CHARTTIME = ymd_hms(CHARTTIME)) %>%
group_by(case_id) %>%
mutate(activity_instance = 1:n())
example_log_3<-lab100 %>%
mutate(resource = NA) %>%
eventlog(
case_id = "case_id",
activity_id = "LOINC_CODE",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "CHARTTIME",
resource_id = "resource"
)
View(lab100)
uni<-lab100 %>%
select(LOINC_CODE)%>%
distinct() %>%
mutate(activity_instance = 1:n())
library(rmarkdown)
crispdm_report(name = "MyReport.Rmd",edit=TRUE,create_dir = FALSE)
install.packages("remotes")
remotes::install_github("wkdavis/rmddm")
setwd("E:/school/data mining/project/mimic-iii-clinical-database-1.4/mimic-iii-clinical-database-1.4/codes/report")
library(rmddm)
library(rmarkdown)
draft("MyReport.Rmd", template = "crispdm_report", package = "rmddm", edit=FALSE)
draft("MiInforme.Rmd", template = "crispdm_report_es", package = "rmddm", edit=FALSE)
install.packages("citr")
devtools::install_github("crsh/citr")
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation(ref.bib)
citr:::insert_citation("ref.bib")
